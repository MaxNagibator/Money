@page "/debts"
@attribute [Authorize]

<PageTitle>Долги</PageTitle>

<MudStack AlignItems="AlignItems.Center"
          Class="mb-3"
          Row
          Spacing="1">
    <MudText Typo="Typo.h3">
        Долги
    </MudText>
    <MudSpacer />
    <MudTooltip Text="Простить долги">
        <MudToggleIconButton Color="Color.Tertiary"
                             Icon="@Icons.Material.Rounded.Handshake"
                             Toggled="_isForgiveOpen"
                             ToggledChanged="OpenForgiveAsync"
                             ToggledVariant="Variant.Outlined"
                             Variant="Variant.Filled" />
    </MudTooltip>

    <MudPopover AnchorOrigin="Origin.BottomRight"
                Open="_isForgiveOpen"
                TransformOrigin="Origin.TopRight">
        <MudPaper Class="pa-3">
            <MudStack Spacing="2">
                <MudText>
                    Перенос долгов держателей в расходы
                </MudText>

                <CategorySelector @ref="_categorySelector"
                                  SelectionMode="SelectionMode.SingleSelection" />

                <MudTextField Adornment="Adornment.Start"
                              AdornmentColor="Color.Tertiary"
                              AdornmentIcon="@Icons.Material.Rounded.Comment"
                              AutoGrow
                              @bind-Value="_forgiveComment"
                              Clearable
                              Immediate
                              Label="Приписка" />

                <MudStack AlignItems="AlignItems.Center"
                          Class="mt-3"
                          Row>
                    <MudButton Color="Color.Error"
                               OnClick="() => _isForgiveOpen = false">
                        Закрыть
                    </MudButton>
                    <MudSpacer />
                    <MudButton ButtonType="ButtonType.Submit"
                               Color="Color.Tertiary"
                               OnClick="ForgiveAsync"
                               Variant="Variant.Filled">
                        Простить
                    </MudButton>
                </MudStack>
            </MudStack>
        </MudPaper>
    </MudPopover>

    <MudTooltip Text="Слияние держателей">
        <MudToggleIconButton Color="Color.Tertiary"
                             Icon="@Icons.Material.Rounded.Merge"
                             Toggled="_isMergeOpen"
                             ToggledChanged="OpenMergeAsync"
                             ToggledVariant="Variant.Outlined"
                             Variant="Variant.Filled" />
    </MudTooltip>

    <MudPopover AnchorOrigin="Origin.BottomRight"
                Open="_isMergeOpen"
                TransformOrigin="Origin.TopRight">
        <MudPaper Class="pa-3">
            <MudStack Spacing="2">
                <MudText>
                    Объединить долги @OwnerFrom?.UserName с долгами @OwnerTo?.UserName
                </MudText>
                <MudSelect Adornment="Adornment.Start"
                           AdornmentColor="Color.Tertiary"
                           AdornmentIcon="@Icons.Material.Rounded.Output"
                           @bind-Value="OwnerFrom"
                           Clearable
                           HelperText="Кто удалится"
                           Label="Сливаемый должник">
                    @foreach (var owner in _owners ?? [])
                    {
                        <MudSelectItem Disabled="@(owner.Id == OwnerTo?.Id)"
                                       @key="owner.Id"
                                       Value="owner">
                            @owner.UserName
                        </MudSelectItem>
                    }
                </MudSelect>
                <MudSelect Adornment="Adornment.Start"
                           AdornmentColor="Color.Tertiary"
                           AdornmentIcon="@Icons.Material.Rounded.Input"
                           @bind-Value="OwnerTo"
                           Clearable
                           HelperText="Кто останется"
                           Label="Поглощающий должник">
                    @foreach (var owner in _owners ?? [])
                    {
                        <MudSelectItem Disabled="@(owner.Id == OwnerFrom?.Id)"
                                       @key="owner.Id"
                                       Value="owner">
                            @owner.UserName
                        </MudSelectItem>
                    }
                </MudSelect>

                <MudStack AlignItems="AlignItems.Center"
                          Class="mt-3"
                          Row>
                    <MudButton Color="Color.Error"
                               OnClick="() => _isMergeOpen = false">
                        Закрыть
                    </MudButton>
                    <MudIconButton Color="Color.Tertiary"
                                   Icon="@Icons.Material.Rounded.SwapHoriz"
                                   OnClick="SwapOwners"
                                   Size="Size.Small" />
                    <MudSpacer />
                    <MudButton ButtonType="ButtonType.Submit"
                               Color="Color.Tertiary"
                               Variant="Variant.Filled"
                               Disabled="@(OwnerTo == null || OwnerFrom == null)"
                               OnClick="MergeOwnersAsync">
                        Объединить
                    </MudButton>
                </MudStack>
            </MudStack>
        </MudPaper>
    </MudPopover>
</MudStack>

<MudGrid Class="mb-4"
         Spacing="2">
    @foreach (var type in DebtTypes.Values.Values)
    {
        <MudItem lg="2"
                 md="3"
                 xs="12">
            <MudButton EndIcon="@Icons.Material.Filled.Add"
                       OnClick="() => CreateAsync(type)"
                       FullWidth
                       Variant="Variant.Outlined">
                @type.AddText
            </MudButton>
        </MudItem>
    }
    <MudItem lg="2"
             md="2"
             xs="12">
        <MudButton EndIcon="@Icons.Material.Filled.Add"
                   OnClick="() => CreateAsync()"
                   FullWidth
                   Variant="Variant.Outlined">
            Добавить
        </MudButton>
    </MudItem>
    <MudItem lg="6"
             md="4"
             xs="12">
        <MudTextField Adornment="Adornment.Start"
                      AdornmentIcon="@Icons.Material.Filled.Search"
                      Clearable
                      FullWidth
                      Placeholder="Поиск..."
                      T="string"
                      Text="@_searchQuery"
                      TextChanged="OnSearchQueryChanged" />
    </MudItem>
</MudGrid>

<MudDivider Class="mt-4 mb-4" />

@if (_filteredTypes.Count <= 0)
{
    <MudText Align="Align.Center"
             Color="Color.Secondary"
             Typo="Typo.h6">
        Нет данных для отображения
    </MudText>

    return;
}

@foreach (var type in _filteredTypes)
{
    <MudStack AlignItems="AlignItems.Center"
              Row>
        <MudIcon Icon="@Icons.Material.Filled.Label" />
        <MudText Class="mt-3 mb-2"
                 Typo="Typo.h5">
            @type.Type.Name
        </MudText>
        <MudSpacer />
        <MudTooltip Text="Общая сумма">
            <MudText Typo="Typo.subtitle2">
                @type.Owners.Sum(owner => owner.CalculateSum()).ToMoneyString()
            </MudText>
        </MudTooltip>
        <MudIconButton Icon="@(type.Expanded ? Icons.Material.Rounded.ExpandLess : Icons.Material.Rounded.ExpandMore)"
                       OnClick="() => ToggleType(type)" />
    </MudStack>

    <MudCollapse Expanded="@type.Expanded">
        <MudStack Spacing="2">
            @foreach (var owner in type.Owners)
            {
                <div>
                    <MudPaper Class="pa-2"
                              Elevation="1">
                        <MudStack AlignItems="AlignItems.Center"
                                  Row
                                  Spacing="1"
                                  Wrap="Wrap.Wrap">
                            <MudText Typo="Typo.h6">@owner.UserName</MudText>

                            <MudSpacer />

                            <MudTooltip Text="Количество долгов">
                                <MudChip Icon="@Icons.Material.Rounded.ListAlt"
                                         Size="Size.Small"
                                         T="string"
                                         Text="@owner.Debts.Count.ToString()" />
                            </MudTooltip>

                            <MudTooltip Text="Последний платеж">
                                <MudChip Icon="@Icons.Material.Rounded.CalendarToday"
                                         Size="Size.Small"
                                         T="string"
                                         Text="@(owner.GetLastPayDate()?.ToShortDateString() ?? "\u221e")" />
                            </MudTooltip>

                            <MudTooltip Text="Всего/Остаток">
                                <MudChip Icon="@Icons.Material.Rounded.AttachMoney"
                                         Size="Size.Small"
                                         T="string"
                                         Text="@($"{owner.CalculateSum():N0}/{owner.CalculateRemainder():N0}")" />
                            </MudTooltip>

                            <MudTooltip Text="Процент погашения">
                                <MudChip Icon="@Icons.Material.Rounded.ArrowCircleUp"
                                         Size="Size.Small"
                                         T="string"
                                         Text="@owner.CalculatePercent().ToString("P0")" />
                            </MudTooltip>
                        </MudStack>
                    </MudPaper>

                    <MudGrid Class="my-1"
                             Spacing="1">
                        <Virtualize Context="model"
                                    Items="owner.Debts">
                            <MudItem Class="mb-3"
                                     lg="3"
                                     md="4"
                                     xs="12">
                                <DebtCard Model="model"
                                          OnUpdate="UpdateAsync" />
                            </MudItem>
                        </Virtualize>
                    </MudGrid>
                </div>
            }
        </MudStack>
    </MudCollapse>
}
